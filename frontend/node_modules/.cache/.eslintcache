[{"/Users/katieto/Desktop/LAhacks/frontend/src/index.js":"1","/Users/katieto/Desktop/LAhacks/frontend/src/pages/Login.js":"2","/Users/katieto/Desktop/LAhacks/frontend/src/pages/home.js":"3","/Users/katieto/Desktop/LAhacks/frontend/src/reportWebVitals.js":"4","/Users/katieto/Desktop/LAhacks/frontend/src/pages/Signup.js":"5","/Users/katieto/Desktop/LAhacks/frontend/src/pages/App.js":"6","/Users/katieto/Desktop/LAhacks/frontend/src/components/TaskComp.js":"7","/Users/katieto/Desktop/LAhacks/frontend/src/pages/Friends.jsx":"8","/Users/katieto/Desktop/LAhacks/frontend/src/pages/Post.jsx":"9"},{"size":1316,"mtime":1682221288949,"results":"10","hashOfConfig":"11"},{"size":4584,"mtime":1682221288954,"results":"12","hashOfConfig":"11"},{"size":201,"mtime":1682221288955,"results":"13","hashOfConfig":"11"},{"size":362,"mtime":1682221288955,"results":"14","hashOfConfig":"11"},{"size":4584,"mtime":1682221288954,"results":"15","hashOfConfig":"11"},{"size":579,"mtime":1682221288952,"results":"16","hashOfConfig":"11"},{"size":165,"mtime":1682221288948,"results":"17","hashOfConfig":"11"},{"size":738,"mtime":1682221288953,"results":"18","hashOfConfig":"11"},{"size":294,"mtime":1682221288954,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"w1s4zh",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"/Users/katieto/Desktop/LAhacks/frontend/src/index.js",["52","53","54","55"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './pages/App';\nimport Home from './pages/home.js';\nimport Login from './pages/Login.js';\nimport Signup from './pages/Signup';\nimport Friends from './pages/Friends';\nimport Task from './components/TaskComp';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <div>\n    <React.StrictMode>\n    <Router>\n    <Routes>\n      <Route exact path=\"/\" element={<Home/>}/>\n      <Route exact path=\"/login\" element={<Login/>}/>\n      <Route exact path=\"/signup\" element={<Signup/>}/>\n      <Route exact path=\"/friends\" element={<Friends/>}/>\n      <Route exact path=\"/task\" element={<Task/>}/>\n    </Routes>\n    </Router>\n  </React.StrictMode>\n  <a href=\"./friends\"> friends</a>\n  <a>   </a>\n  <a href=\"./signup\"> signup</a>\n  <a>   </a>\n  <a href=\"./login\"> login.</a>\n  <a>   </a>\n  <a href=\"./task\"> task.</a>\n  </div>\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/katieto/Desktop/LAhacks/frontend/src/pages/Login.js",["56","57","58","59"],[],"import React, {useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\n// import '../styles/LogIn.css';\n\nconst LoginScreen = () => {\n    const [records, setRecords] = useState([]);\n    const navigate = useNavigate();\n    // var sha1 = require('sha1');\n// \n\n    // creates temp form\n    const [form, setForm] = useState({\n        username: \"\",\n        password: \"\",\n    });\n\n    // updates form \n    function updateForm(value) {\n        return setForm((prev) => {\n        return { ...prev, ...value };\n        });\n    }\n\n    // async function loadProfileInformation() {\n    //     var DBF_username = localStorage.getItem(\"DBF_username\");\n    //     if(DBF_username == null) {\n    //         // this should NEVER happen\n    //         DBF_username = \"chang\";\n    //     }\n    //     const response = await fetch(`http://localhost:5000/profile/`);\n    \n    //     if (!response.ok) {\n    //         const message = `An error occurred: ${response.statusText}`;\n    //         window.alert(message);\n    //         return;\n    //     }\n    //     const records = await response.json();\n    //     for(var record of records) {\n    //         if(record.username === DBF_username) {\n    //             return record;\n    //         }\n    //     }\n    //     return null;\n    // }\n\n\n\n    \n\n    // async function onLogin(e) {\n    //     e.preventDefault();\n    //     var username = form.username\n    //     var password = sha1(form.password)\n\n    //     var loginValid = false;\n    //     for(var record of records) {\n    //         if(username === record[\"username\"]) {\n    //            if(password === record[\"password\"]) {\n    //                 console.log(record);\n    //                 localStorage.setItem(\"DBF_username\", username);\n    //                 // GET EVERYTHING ELSE FIRST\n    //                 var information = await loadProfileInformation();\n                    \n    //                 localStorage.setItem(\"DBF_username\", username);\n    //                 localStorage.setItem(\"name\", information.name);\n    //                 localStorage.setItem(\"profilePicture\", information.profilePicture);\n    //                 localStorage.setItem(\"userDescription\", information.userDescription);\n    //                 localStorage.setItem(\"_id\", information._id);\n\n    //                 navigate(\"/profile\");\n    //                 window.location.reload(); // this is so navbar fixes itself\n    //                 loginValid = true;\n    //            }\n    //            else {\n    //             alert(\"Incorrect Password — DontBeFake\");\n    //             return;\n    //            }\n    //         }\n    //     }\n    //     if(!loginValid){\n    //         alert(\"Username not Found — DontBeFake\");\n    //     }\n    // }\n\n\n \n    // // This method fetches the records from the database.\n    // useEffect(() => {\n    //     async function getRecords() {\n    //       const response = await fetch(`http://localhost:5000/login/`);\n      \n    //       if (!response.ok) {\n    //         const message = `An error occurred: ${response.statusText}`;\n    //         window.alert(message);\n    //         return;\n    //       }\n      \n    //       const records = await response.json();\n    //       setRecords(records);\n    //     }\n    //     // this immediately gets them\n    //     getRecords();\n    //     return;\n    //   }, [records.length]);\n\n    return (\n        <body>\n        <div>\n            <div className=\"title\">S I D E Q U E S T\n                <div className=\"login-text\">Login.</div>\n            </div>\n            <form  /*onSubmit={onLogin}*/>\n                <input \n                className= \"input-bar\" \n                type=\"text\" id=\"username\" \n                name=\"username\" \n                placeholder=\"Username.\"\n                value={form.username}\n                onChange={(e) => updateForm({ username: e.target.value })}\n                />\n                <div>\n                    <input \n                    className= \"input-bar\" \n                    type=\"password\" \n                    id=\"password\" \n                    name=\"password\" \n                    placeholder=\"Password.\"\n                    value={form.password}\n                    onChange={(e) => updateForm({ password: e.target.value })}\n                    />\n                </div>\n                <input className=\"button\" type=\"submit\" value=\"Login.\"></input>\n            </form>\n            <div>\n            <a href=\"./signup\">or SignUp.</a>\n            </div>\n        </div>\n        </body>\n        \n    )\n}\n\nexport default LoginScreen;","/Users/katieto/Desktop/LAhacks/frontend/src/pages/home.js",[],[],"/Users/katieto/Desktop/LAhacks/frontend/src/reportWebVitals.js",[],[],"/Users/katieto/Desktop/LAhacks/frontend/src/pages/Signup.js",["60","61","62","63"],[],"import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\n// import '../styles/LogIn.css';\n\nconst SignUpScreen = () => {\n    const [form, setForm] = useState({\n        username: \"\",\n        password: \"\",\n        password2: \"\",\n      });\n      const navigate = useNavigate();\n  \n      function updateForm(value) {\n          return setForm((prev) => {\n            return { ...prev, ...value };\n          });\n        }\n  \n      async function onSubmit(e) {\n      e.preventDefault();\n\n    //   username blank string prevention\n      if(form.username == \"\") {\n        alert(\"Please input a username. —  S I D E Q U E S T\");\n        return;\n      }\n\n      //password blank string prevention\n      if(form.password == \"\") {\n        alert(\"Please input a password. — S I D E Q U E S T\");\n        return;\n      }\n      const check = await fetch(`http://localhost:4000/login`);\n    \n      const usernamechecker = await check.json();\n\n      // no duplicate login\n      for(var login of usernamechecker) {\n        if(login.username == form.username) {\n            alert(\"This username has been taken. — S I D E Q U E S T\");\n            return;\n        }\n      }\n      \n      var p1 = form.password;\n      var p2 = form.password2;\n      if(p1 !== p2) {\n        // TODO: make it clear they fucked up\n        window.location.reload(false);\n        return;\n      }\n      const newPerson = {username : form.username, password: p1};\n      \n      await fetch(\"http://localhost:4000/login/add\", {\n          method: \"POST\",\n          headers: {\n          \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(newPerson),\n      })\n      .catch(error => {\n          window.alert(error);\n          return;\n      });\n\n      // creates an empty profile so the database doesn't implode on itself.\n      const newProfileInformation = \n      {\n        username: form.username, \n        name: \"\",\n        friends: new Array(),\n      }\n      await fetch(\"http://localhost:4000/profile/add\", {\n          method: \"POST\",\n          headers: {\n          \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(newProfileInformation),\n      })\n      .catch(error => {\n          window.alert(error);\n          return;\n      });\n\n      const response = await fetch(`http://localhost:4000/profile/`);\n    \n      if (!response.ok) {\n          const message = `An error occurred: ${response.statusText}`;\n          window.alert(message);\n          return;\n      }\n      const records = await response.json();\n\n      var dataBase_id = -1;\n      for(var record of records) {\n        if(record.username === form.username) {\n            dataBase_id = record._id;\n        }\n    }\n\n      localStorage.setItem(\"SQ_username\", form.username);\n      localStorage.setItem(\"_id\", dataBase_id);\n      \n\n      setForm({ username: \"\", password: \"\", password2: \"\"});\n\n      navigate(\"/\"); //TODO: change to editprofile\n      window.location.reload(); // this is so navbar fixes itself\n      }\n\n    return (\n        <body>\n        <div>\n            <div className=\"title\">S I D E Q U E S T.\n                <div className=\"login-text\">Signup.</div>\n            </div>\n            <form onSubmit={onSubmit}>\n                <input\n                 className= \"input-bar\" \n                 type=\"text\" \n                 id=\"username\" \n                 name=\"username\" \n                 placeholder=\"Username.\" \n                 value={form.username}\n                 onChange={(e) => updateForm({ username: e.target.value })}\n                 />\n                <div>\n                    <input\n                     className= \"input-bar\" \n                     type=\"password\" \n                     id=\"password\" \n                     name=\"password\" \n                     placeholder=\"Password.\"\n                     value={form.password}\n                     onChange={(e) => updateForm({ password: e.target.value })}\n                     />\n                </div>\n                <div>\n                    <input \n                    className= \"input-bar\" \n                    type=\"password\" \n                    id=\"password\" \n                    name=\"password\" \n                    placeholder=\"ReEnterPassword.\"\n                    value={form.password2}\n                    onChange={(e) => updateForm({ password2: e.target.value })}\n                    />\n                </div>\n                <input className=\"button\" type=\"submit\" value=\"Submit.\"></input>\n            </form>\n\n        </div>\n        </body>\n    )\n}\n\nexport default SignUpScreen;","/Users/katieto/Desktop/LAhacks/frontend/src/pages/App.js",[],[],"/Users/katieto/Desktop/LAhacks/frontend/src/components/TaskComp.js",[],[],"/Users/katieto/Desktop/LAhacks/frontend/src/pages/Friends.jsx",["64","65"],[],"import logo from '../logo.svg';\nimport Post from \"./Post.jsx\"\nimport '../styles/Friends.css';\nimport TaskComp from '../components/TaskComp';\n\nfunction Friends() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>S I D E Q U E S T</h1>\n        <p>what are your fellow quest-ers up to?</p>\n      </header>\n\n      <div class=\"wrapper\">\n        <Post />\n        <Post />\n        <Post />\n        <Post />\n        <Post />\n        <Post />\n        <Post />\n        <Post />\n      </div>\n\n      <div>\n        <form>\n            <h2>Add new friends</h2>\n            <input></input>\n            <button>Add</button>\n        </form>\n      </div>\n\n      <div></div>\n\n    </div>\n  );\n}\n\nexport default Friends;\n","/Users/katieto/Desktop/LAhacks/frontend/src/pages/Post.jsx",["66"],[],"\nfunction Post() {\n  return (\n    <div className=\"post\">\n        <img src =\"https://upload.wikimedia.org/wikipedia/commons/e/e7/Everest_North_Face_toward_Base_Camp_Tibet_Luca_Galuzzi_2006.jpg\" alt=\"test image\"></img>\n        <p>username-test comment</p>\n    </div>\n  );\n}\n\nexport default Post;\n",{"ruleId":"67","severity":1,"message":"68","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":11},{"ruleId":"71","severity":1,"message":"72","line":32,"column":3,"nodeType":"73","endLine":32,"endColumn":6},{"ruleId":"71","severity":1,"message":"72","line":34,"column":3,"nodeType":"73","endLine":34,"endColumn":6},{"ruleId":"71","severity":1,"message":"72","line":36,"column":3,"nodeType":"73","endLine":36,"endColumn":6},{"ruleId":"67","severity":1,"message":"74","line":1,"column":16,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"75","line":7,"column":12,"nodeType":"69","messageId":"70","endLine":7,"endColumn":19},{"ruleId":"67","severity":1,"message":"76","line":7,"column":21,"nodeType":"69","messageId":"70","endLine":7,"endColumn":31},{"ruleId":"67","severity":1,"message":"77","line":8,"column":11,"nodeType":"69","messageId":"70","endLine":8,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":24,"column":24,"nodeType":"80","messageId":"81","endLine":24,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":30,"column":24,"nodeType":"80","messageId":"81","endLine":30,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":40,"column":27,"nodeType":"80","messageId":"81","endLine":40,"endColumn":29},{"ruleId":"82","severity":1,"message":"83","line":72,"column":18,"nodeType":"84","messageId":"85","endLine":72,"endColumn":29},{"ruleId":"67","severity":1,"message":"86","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"67","severity":1,"message":"87","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":5,"column":9,"nodeType":"73","endLine":5,"endColumn":154},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'records' is assigned a value but never used.","'setRecords' is assigned a value but never used.","'navigate' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'logo' is defined but never used.","'TaskComp' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop."]